{"version":3,"file":"insertionFactory.cjs.js","sources":["../../../packages/react/src/insertionFactory.ts"],"sourcesContent":["import type { CSSRulesByBucket, GriffelInsertionFactory, GriffelRenderer } from '@griffel/core';\n\nimport { canUseDOM } from './utils/canUseDOM';\nimport { useInsertionEffect } from './useInsertionEffect';\n\nexport const insertionFactory: GriffelInsertionFactory = () => {\n  const insertionCache: Record<string, boolean> = {};\n\n  return function insert(renderer: GriffelRenderer, cssRules: CSSRulesByBucket) {\n    // Even if `useInsertionEffect` is available, we can use it on a client only as it will not be executed in SSR\n    if (useInsertionEffect && canUseDOM()) {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useInsertionEffect(() => {\n        renderer.insertCSSRules(cssRules!);\n      }, [renderer, cssRules]);\n\n      return;\n    }\n\n    if (insertionCache[renderer.id] === undefined) {\n      renderer.insertCSSRules(cssRules!);\n      insertionCache[renderer.id] = true;\n    }\n  };\n};\n"],"names":["insertionFactory","insertionCache","insert","renderer","cssRules","useInsertionEffect","canUseDOM","insertCSSRules","id","undefined"],"mappings":";;;;;AAKaA,MAAAA,gBAAgB,GAA4BA,MAAK;EAC5D,MAAMC,cAAc,GAA4B,EAAE,CAAA;AAElD,EAAA,OAAO,SAASC,MAAMA,CAACC,QAAyB,EAAEC,QAA0B,EAAA;AAC1E;AACA,IAAA,IAAIC,qCAAkB,IAAIC,mBAAS,EAAE,EAAE;AACrC;AACAD,MAAAA,qCAAkB,CAAC,MAAK;AACtBF,QAAAA,QAAQ,CAACI,cAAc,CAACH,QAAS,CAAC,CAAA;AACpC,OAAC,EAAE,CAACD,QAAQ,EAAEC,QAAQ,CAAC,CAAC,CAAA;AAExB,MAAA,OAAA;AACF,KAAA;IAEA,IAAIH,cAAc,CAACE,QAAQ,CAACK,EAAE,CAAC,KAAKC,SAAS,EAAE;AAC7CN,MAAAA,QAAQ,CAACI,cAAc,CAACH,QAAS,CAAC,CAAA;AAClCH,MAAAA,cAAc,CAACE,QAAQ,CAACK,EAAE,CAAC,GAAG,IAAI,CAAA;AACpC,KAAA;GACD,CAAA;AACH;;;;"}