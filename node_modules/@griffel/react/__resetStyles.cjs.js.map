{"version":3,"file":"__resetStyles.cjs.js","sources":["../../../packages/react/src/__resetStyles.ts"],"sourcesContent":["import { __resetStyles as vanillaResetStyles } from '@griffel/core';\nimport type { CSSRulesByBucket } from '@griffel/core';\n\nimport { insertionFactory } from './insertionFactory';\nimport { useRenderer } from './RendererContext';\nimport { useTextDirection } from './TextDirectionContext';\n\n/**\n * A version of makeResetStyles() that accepts build output as an input and skips all runtime transforms.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function __resetStyles(\n  ltrClassName: string,\n  rtlClassName: string | null,\n  cssRules: CSSRulesByBucket | string[],\n) {\n  const getStyles = vanillaResetStyles(ltrClassName, rtlClassName, cssRules, insertionFactory);\n\n  return function useClasses(): string {\n    const dir = useTextDirection();\n    const renderer = useRenderer();\n\n    return getStyles({ dir, renderer });\n  };\n}\n"],"names":["__resetStyles","ltrClassName","rtlClassName","cssRules","getStyles","vanillaResetStyles","insertionFactory","useClasses","dir","useTextDirection","renderer","useRenderer"],"mappings":";;;;;;;AAOA;;;;AAIG;AACH;SACgBA,aAAaA,CAC3BC,YAAoB,EACpBC,YAA2B,EAC3BC,QAAqC,EAAA;EAErC,MAAMC,SAAS,GAAGC,kBAAkB,CAACJ,YAAY,EAAEC,YAAY,EAAEC,QAAQ,EAAEG,iCAAgB,CAAC,CAAA;EAE5F,OAAO,SAASC,UAAUA,GAAA;AACxB,IAAA,MAAMC,GAAG,GAAGC,qCAAgB,EAAE,CAAA;AAC9B,IAAA,MAAMC,QAAQ,GAAGC,2BAAW,EAAE,CAAA;AAE9B,IAAA,OAAOP,SAAS,CAAC;MAAEI,GAAG;AAAEE,MAAAA,QAAAA;AAAQ,KAAE,CAAC,CAAA;GACpC,CAAA;AACH;;;;"}