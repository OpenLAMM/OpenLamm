{"version":3,"file":"borderLeft.esm.js","sources":["../../../../packages/core/src/shorthands/borderLeft.ts"],"sourcesContent":["import type { GriffelStyle } from '@griffel/style-types';\n\nimport type { BorderColorInput, BorderStyleInput, BorderWidthInput } from './types';\nimport { isBorderStyle } from './utils';\n\ntype BorderLeftStyle = Pick<GriffelStyle, 'borderLeftColor' | 'borderLeftStyle' | 'borderLeftWidth'>;\n\nexport function borderLeft(width: BorderWidthInput): BorderLeftStyle;\nexport function borderLeft(style: BorderStyleInput): BorderLeftStyle;\nexport function borderLeft(width: BorderWidthInput, style: BorderStyleInput): BorderLeftStyle;\nexport function borderLeft(style: BorderStyleInput, width: BorderWidthInput): BorderLeftStyle;\nexport function borderLeft(width: BorderWidthInput, style: BorderStyleInput, color: BorderColorInput): BorderLeftStyle;\nexport function borderLeft(style: BorderStyleInput, width: BorderWidthInput, color: BorderColorInput): BorderLeftStyle;\n\n/**\n * A function that implements expansion for \"border-left\", it's simplified - check usage examples.\n *\n * @example\n *  borderLeft('2px')\n *  borderLeft('solid')\n *  borderLeft('2px', 'solid')\n *  borderLeft('solid', '2px')\n *  borderLeft('2px', 'solid', 'red')\n *  borderLeft('solid', '2px', 'red')\n *\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/border-left\n *\n * @deprecated Just use `{ borderLeft: '2px solid red' }` instead as Griffel supports CSS shorthands now\n */\nexport function borderLeft(\n  ...values: [BorderWidthInput | BorderStyleInput, (BorderWidthInput | BorderStyleInput)?, BorderColorInput?]\n): BorderLeftStyle {\n  if (isBorderStyle(values[0])) {\n    return {\n      borderLeftStyle: values[0],\n      ...(values[1] && ({ borderLeftWidth: values[1] } as BorderLeftStyle)),\n      ...(values[2] && { borderLeftColor: values[2] }),\n    };\n  }\n\n  return {\n    borderLeftWidth: values[0],\n    ...(values[1] && ({ borderLeftStyle: values[1] } as BorderLeftStyle)),\n    ...(values[2] && { borderLeftColor: values[2] }),\n  };\n}\n"],"names":["borderLeft","values","isBorderStyle","Object","assign","borderLeftStyle","borderLeftWidth","borderLeftColor"],"mappings":";;AAcA;;;;;;;;;;;;;;AAcG;AACa,SAAAA,UAAUA,CACxB,GAAGC,MAAwG,EAAA;AAE3G,EAAA,IAAIC,aAAa,CAACD,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;IAC5B,OAAAE,MAAA,CAAAC,MAAA,CAAA;MACEC,eAAe,EAAEJ,MAAM,CAAC,CAAC,CAAA;AAAC,KAAA,EACtBA,MAAM,CAAC,CAAC,CAAC,IAAK;MAAEK,eAAe,EAAEL,MAAM,CAAC,CAAC,CAAA;KAAuB,EAChEA,MAAM,CAAC,CAAC,CAAC,IAAI;MAAEM,eAAe,EAAEN,MAAM,CAAC,CAAC,CAAA;KAAG,CAAA,CAAA;AAEnD,GAAA;EAEA,OAAAE,MAAA,CAAAC,MAAA,CAAA;IACEE,eAAe,EAAEL,MAAM,CAAC,CAAC,CAAA;AAAC,GAAA,EACtBA,MAAM,CAAC,CAAC,CAAC,IAAK;IAAEI,eAAe,EAAEJ,MAAM,CAAC,CAAC,CAAA;GAAuB,EAChEA,MAAM,CAAC,CAAC,CAAC,IAAI;IAAEM,eAAe,EAAEN,MAAM,CAAC,CAAC,CAAA;GAAG,CAAA,CAAA;AAEnD;;;;"}