{"version":3,"file":"borderRight.esm.js","sources":["../../../../packages/core/src/shorthands/borderRight.ts"],"sourcesContent":["import type { GriffelStyle } from '@griffel/style-types';\n\nimport type { BorderColorInput, BorderStyleInput, BorderWidthInput } from './types';\nimport { isBorderStyle } from './utils';\n\ntype BorderRightStyle = Pick<GriffelStyle, 'borderRightWidth' | 'borderRightStyle' | 'borderRightColor'>;\n\nexport function borderRight(width: BorderWidthInput): BorderRightStyle;\nexport function borderRight(style: BorderStyleInput): BorderRightStyle;\nexport function borderRight(width: BorderWidthInput, style: BorderStyleInput): BorderRightStyle;\nexport function borderRight(style: BorderStyleInput, width: BorderWidthInput): BorderRightStyle;\nexport function borderRight(\n  width: BorderWidthInput,\n  style: BorderStyleInput,\n  color: BorderColorInput,\n): BorderRightStyle;\nexport function borderRight(\n  style: BorderStyleInput,\n  width: BorderWidthInput,\n  color: BorderColorInput,\n): BorderRightStyle;\n\n/**\n * A function that implements expansion for \"border-right\", it's simplified - check usage examples.\n *\n * @example\n *  borderRight('2px')\n *  borderRight('solid')\n *  borderRight('2px', 'solid')\n *  borderRight('solid', '2px')\n *  borderRight('2px', 'solid', 'red')\n *  borderRight('solid', '2px', 'red')\n *\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/border-right\n *\n * @deprecated Just use `{ borderRight: '2px solid red' }` instead as Griffel supports CSS shorthands now\n */\nexport function borderRight(\n  ...values: [BorderWidthInput | BorderStyleInput, (BorderWidthInput | BorderStyleInput)?, BorderColorInput?]\n): BorderRightStyle {\n  if (isBorderStyle(values[0])) {\n    return {\n      borderRightStyle: values[0],\n      ...(values[1] && { borderRightWidth: values[1] }),\n      ...(values[2] && { borderRightColor: values[2] }),\n    };\n  }\n\n  return {\n    borderRightWidth: values[0],\n    ...(values[1] && ({ borderRightStyle: values[1] } as BorderRightStyle)),\n    ...(values[2] && { borderRightColor: values[2] }),\n  };\n}\n"],"names":["borderRight","values","isBorderStyle","Object","assign","borderRightStyle","borderRightWidth","borderRightColor"],"mappings":";;AAsBA;;;;;;;;;;;;;;AAcG;AACa,SAAAA,WAAWA,CACzB,GAAGC,MAAwG,EAAA;AAE3G,EAAA,IAAIC,aAAa,CAACD,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;IAC5B,OAAAE,MAAA,CAAAC,MAAA,CAAA;MACEC,gBAAgB,EAAEJ,MAAM,CAAC,CAAC,CAAA;AAAC,KAAA,EACvBA,MAAM,CAAC,CAAC,CAAC,IAAI;MAAEK,gBAAgB,EAAEL,MAAM,CAAC,CAAC,CAAA;KAAG,EAC5CA,MAAM,CAAC,CAAC,CAAC,IAAI;MAAEM,gBAAgB,EAAEN,MAAM,CAAC,CAAC,CAAA;KAAG,CAAA,CAAA;AAEpD,GAAA;EAEA,OAAAE,MAAA,CAAAC,MAAA,CAAA;IACEE,gBAAgB,EAAEL,MAAM,CAAC,CAAC,CAAA;AAAC,GAAA,EACvBA,MAAM,CAAC,CAAC,CAAC,IAAK;IAAEI,gBAAgB,EAAEJ,MAAM,CAAC,CAAC,CAAA;GAAwB,EAClEA,MAAM,CAAC,CAAC,CAAC,IAAI;IAAEM,gBAAgB,EAAEN,MAAM,CAAC,CAAC,CAAA;GAAG,CAAA,CAAA;AAEpD;;;;"}