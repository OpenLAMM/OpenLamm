{"version":3,"file":"resolveResetStyleRules.cjs.js","sources":["../../../../packages/core/src/runtime/resolveResetStyleRules.ts"],"sourcesContent":["import hashString from '@emotion/hash';\nimport type { GriffelResetStyle, GriffelAnimation } from '@griffel/style-types';\nimport { convert, convertProperty } from 'rtl-css-js/core';\n\nimport { RESET_HASH_PREFIX } from '../constants';\nimport type { CSSRulesByBucket } from '../types';\nimport { isMediaQuerySelector } from './utils/isMediaQuerySelector';\nimport { isLayerSelector } from './utils/isLayerSelector';\nimport { isNestedSelector } from './utils/isNestedSelector';\nimport { isSupportQuerySelector } from './utils/isSupportQuerySelector';\nimport { isObject } from './utils/isObject';\nimport { hyphenateProperty } from './utils/hyphenateProperty';\nimport { normalizePseudoSelector } from './compileAtomicCSSRule';\nimport { compileResetCSSRules } from './compileResetCSSRules';\nimport { compileKeyframeRule, compileKeyframesCSS } from './compileKeyframeCSS';\nimport { isContainerQuerySelector } from './utils/isContainerQuerySelector';\nimport { warnAboutUnresolvedRule } from './warnings/warnAboutUnresolvedRule';\n\n/**\n * @internal\n */\nfunction createStringFromStyles(styles: GriffelResetStyle) {\n  let ltrCSS = '';\n  let rtlCSS = '';\n\n  // eslint-disable-next-line guard-for-in\n  for (const property in styles) {\n    const value = styles[property as keyof GriffelResetStyle];\n\n    // eslint-disable-next-line eqeqeq\n    if (value == null) {\n      continue;\n    }\n\n    if (typeof value === 'string' || typeof value === 'number') {\n      const { key: rtlProperty, value: rtlValue } = convertProperty(property, value);\n\n      ltrCSS += `${hyphenateProperty(property)}:${value};`;\n      rtlCSS += `${hyphenateProperty(rtlProperty)}:${rtlValue};`;\n\n      continue;\n    }\n\n    if (property === 'animationName' && typeof value === 'object') {\n      const values = Array.isArray(value) ? (value as GriffelAnimation[]) : [value as GriffelAnimation];\n\n      const ltrAnimationNames: string[] = [];\n      const rtlAnimationNames: string[] = [];\n\n      for (const keyframeObject of values) {\n        const ltrKeyframeRule = compileKeyframeRule(keyframeObject);\n        const rtlKeyframeRule = compileKeyframeRule(convert(keyframeObject));\n\n        const ltrAnimationName = RESET_HASH_PREFIX + hashString(ltrKeyframeRule);\n        const rtlAnimationName = RESET_HASH_PREFIX + hashString(rtlKeyframeRule);\n\n        ltrAnimationNames.push(ltrAnimationName);\n        rtlAnimationNames.push(rtlAnimationName);\n\n        ltrCSS += compileKeyframesCSS(ltrAnimationName, ltrKeyframeRule).join('');\n\n        if (ltrAnimationName !== rtlAnimationName) {\n          rtlCSS += compileKeyframesCSS(rtlAnimationName, rtlKeyframeRule).join('');\n        }\n      }\n\n      ltrCSS += `animation-name:${ltrAnimationNames.join(',')};`;\n      rtlCSS += `animation-name:${rtlAnimationNames.join(',')};`;\n\n      continue;\n    }\n\n    if (Array.isArray(value)) {\n      // not animationName property but array in the value => fallback values\n      if (value.length === 0) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            `makeResetStyles(): An empty array was passed as input to \"${property}\", the property will be omitted in the styles.`,\n          );\n        }\n        continue;\n      }\n\n      const rtlDefinitions = value.map(v => convertProperty(property, v!));\n      const rtlPropertyConsistent = !rtlDefinitions.some(v => v.key !== rtlDefinitions[0].key);\n\n      if (!rtlPropertyConsistent) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(\n            'makeStyles(): mixing CSS fallback values which result in multiple CSS properties in RTL is not supported.',\n          );\n        }\n        continue;\n      }\n\n      const rtlProperty = rtlDefinitions[0].key;\n\n      ltrCSS += value.map(v => `${hyphenateProperty(property)}:${v};`).join('');\n      rtlCSS += rtlDefinitions.map(definition => `${hyphenateProperty(rtlProperty)}:${definition.value};`).join('');\n\n      continue;\n    }\n\n    if (isObject(value)) {\n      if (isNestedSelector(property)) {\n        const nestedSelector = normalizePseudoSelector(property);\n        const [ltrNested, rtlNested] = createStringFromStyles(value);\n\n        ltrCSS += `${nestedSelector}{${ltrNested}}`;\n        rtlCSS += `${nestedSelector}{${rtlNested}}`;\n\n        continue;\n      }\n\n      if (\n        isMediaQuerySelector(property) ||\n        isLayerSelector(property) ||\n        isSupportQuerySelector(property) ||\n        isContainerQuerySelector(property)\n      ) {\n        const [ltrNested, rtlNested] = createStringFromStyles(value);\n\n        ltrCSS += `${property}{${ltrNested}}`;\n        rtlCSS += `${property}{${rtlNested}}`;\n\n        continue;\n      }\n    }\n\n    warnAboutUnresolvedRule(property, value as GriffelResetStyle);\n  }\n\n  return [ltrCSS, rtlCSS];\n}\n\n/**\n * @internal\n */\nexport function resolveResetStyleRules(\n  styles: GriffelResetStyle,\n  classNameHashSalt: string = '',\n): [string, string | null, CSSRulesByBucket | string[]] {\n  const [ltrRule, rtlRule] = createStringFromStyles(styles);\n\n  const ltrClassName = RESET_HASH_PREFIX + hashString(classNameHashSalt + ltrRule);\n  const [ltrCSS, ltrCSSAtRules] = compileResetCSSRules(`.${ltrClassName}{${ltrRule}}`);\n\n  const hasAtRules = ltrCSSAtRules.length > 0;\n\n  if (ltrRule === rtlRule) {\n    return [ltrClassName, null, hasAtRules ? { r: ltrCSS, s: ltrCSSAtRules } : ltrCSS];\n  }\n\n  const rtlClassName = RESET_HASH_PREFIX + hashString(classNameHashSalt + rtlRule);\n  const [rtlCSS, rtlCSSAtRules] = compileResetCSSRules(`.${rtlClassName}{${rtlRule}}`);\n\n  return [\n    ltrClassName,\n    rtlClassName,\n    hasAtRules ? { r: ltrCSS.concat(rtlCSS), s: ltrCSSAtRules.concat(rtlCSSAtRules) } : ltrCSS.concat(rtlCSS),\n  ];\n}\n"],"names":["createStringFromStyles","styles","ltrCSS","rtlCSS","property","value","key","rtlProperty","rtlValue","convertProperty","hyphenateProperty","values","Array","isArray","ltrAnimationNames","rtlAnimationNames","keyframeObject","ltrKeyframeRule","compileKeyframeRule","rtlKeyframeRule","convert","ltrAnimationName","RESET_HASH_PREFIX","hashString","rtlAnimationName","push","compileKeyframesCSS","join","length","process","env","NODE_ENV","console","warn","rtlDefinitions","map","v","rtlPropertyConsistent","some","error","definition","isObject","isNestedSelector","nestedSelector","normalizePseudoSelector","ltrNested","rtlNested","isMediaQuerySelector","isLayerSelector","isSupportQuerySelector","isContainerQuerySelector","warnAboutUnresolvedRule","resolveResetStyleRules","classNameHashSalt","ltrRule","rtlRule","ltrClassName","ltrCSSAtRules","compileResetCSSRules","hasAtRules","r","s","rtlClassName","rtlCSSAtRules","concat"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAkBA;;AAEG;AACH,SAASA,sBAAsBA,CAACC,MAAyB,EAAA;EACvD,IAAIC,MAAM,GAAG,EAAE,CAAA;EACf,IAAIC,MAAM,GAAG,EAAE,CAAA;AAEf;AACA,EAAA,KAAK,MAAMC,QAAQ,IAAIH,MAAM,EAAE;AAC7B,IAAA,MAAMI,KAAK,GAAGJ,MAAM,CAACG,QAAmC,CAAC,CAAA;AAEzD;IACA,IAAIC,KAAK,IAAI,IAAI,EAAE;AACjB,MAAA,SAAA;AACF,KAAA;IAEA,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC1D,MAAM;AAAEC,QAAAA,GAAG,EAAEC,WAAW;AAAEF,QAAAA,KAAK,EAAEG,QAAAA;AAAU,OAAA,GAAGC,oBAAe,CAACL,QAAQ,EAAEC,KAAK,CAAC,CAAA;MAE9EH,MAAM,IAAI,GAAGQ,mCAAiB,CAACN,QAAQ,CAAC,CAAA,CAAA,EAAIC,KAAK,CAAG,CAAA,CAAA,CAAA;MACpDF,MAAM,IAAI,GAAGO,mCAAiB,CAACH,WAAW,CAAC,CAAA,CAAA,EAAIC,QAAQ,CAAG,CAAA,CAAA,CAAA;AAE1D,MAAA,SAAA;AACF,KAAA;IAEA,IAAIJ,QAAQ,KAAK,eAAe,IAAI,OAAOC,KAAK,KAAK,QAAQ,EAAE;AAC7D,MAAA,MAAMM,MAAM,GAAGC,KAAK,CAACC,OAAO,CAACR,KAAK,CAAC,GAAIA,KAA4B,GAAG,CAACA,KAAyB,CAAC,CAAA;MAEjG,MAAMS,iBAAiB,GAAa,EAAE,CAAA;MACtC,MAAMC,iBAAiB,GAAa,EAAE,CAAA;AAEtC,MAAA,KAAK,MAAMC,cAAc,IAAIL,MAAM,EAAE;AACnC,QAAA,MAAMM,eAAe,GAAGC,sCAAmB,CAACF,cAAc,CAAC,CAAA;QAC3D,MAAMG,eAAe,GAAGD,sCAAmB,CAACE,YAAO,CAACJ,cAAc,CAAC,CAAC,CAAA;AAEpE,QAAA,MAAMK,gBAAgB,GAAGC,2BAAiB,GAAGC,2BAAU,CAACN,eAAe,CAAC,CAAA;AACxE,QAAA,MAAMO,gBAAgB,GAAGF,2BAAiB,GAAGC,2BAAU,CAACJ,eAAe,CAAC,CAAA;AAExEL,QAAAA,iBAAiB,CAACW,IAAI,CAACJ,gBAAgB,CAAC,CAAA;AACxCN,QAAAA,iBAAiB,CAACU,IAAI,CAACD,gBAAgB,CAAC,CAAA;QAExCtB,MAAM,IAAIwB,sCAAmB,CAACL,gBAAgB,EAAEJ,eAAe,CAAC,CAACU,IAAI,CAAC,EAAE,CAAC,CAAA;QAEzE,IAAIN,gBAAgB,KAAKG,gBAAgB,EAAE;UACzCrB,MAAM,IAAIuB,sCAAmB,CAACF,gBAAgB,EAAEL,eAAe,CAAC,CAACQ,IAAI,CAAC,EAAE,CAAC,CAAA;AAC3E,SAAA;AACF,OAAA;MAEAzB,MAAM,IAAI,kBAAkBY,iBAAiB,CAACa,IAAI,CAAC,GAAG,CAAC,CAAG,CAAA,CAAA,CAAA;MAC1DxB,MAAM,IAAI,kBAAkBY,iBAAiB,CAACY,IAAI,CAAC,GAAG,CAAC,CAAG,CAAA,CAAA,CAAA;AAE1D,MAAA,SAAA;AACF,KAAA;AAEA,IAAA,IAAIf,KAAK,CAACC,OAAO,CAACR,KAAK,CAAC,EAAE;AACxB;AACA,MAAA,IAAIA,KAAK,CAACuB,MAAM,KAAK,CAAC,EAAE;AACtB,QAAA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;AACzCC,UAAAA,OAAO,CAACC,IAAI,CACV,CAA6D7B,0DAAAA,EAAAA,QAAQ,gDAAgD,CACtH,CAAA;AACH,SAAA;AACA,QAAA,SAAA;AACF,OAAA;AAEA,MAAA,MAAM8B,cAAc,GAAG7B,KAAK,CAAC8B,GAAG,CAACC,CAAC,IAAI3B,oBAAe,CAACL,QAAQ,EAAEgC,CAAE,CAAC,CAAC,CAAA;AACpE,MAAA,MAAMC,qBAAqB,GAAG,CAACH,cAAc,CAACI,IAAI,CAACF,CAAC,IAAIA,CAAC,CAAC9B,GAAG,KAAK4B,cAAc,CAAC,CAAC,CAAC,CAAC5B,GAAG,CAAC,CAAA;MAExF,IAAI,CAAC+B,qBAAqB,EAAE;AAC1B,QAAA,IAAIR,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;AACzCC,UAAAA,OAAO,CAACO,KAAK,CACX,2GAA2G,CAC5G,CAAA;AACH,SAAA;AACA,QAAA,SAAA;AACF,OAAA;AAEA,MAAA,MAAMhC,WAAW,GAAG2B,cAAc,CAAC,CAAC,CAAC,CAAC5B,GAAG,CAAA;MAEzCJ,MAAM,IAAIG,KAAK,CAAC8B,GAAG,CAACC,CAAC,IAAI,GAAG1B,mCAAiB,CAACN,QAAQ,CAAC,CAAA,CAAA,EAAIgC,CAAC,CAAG,CAAA,CAAA,CAAC,CAACT,IAAI,CAAC,EAAE,CAAC,CAAA;MACzExB,MAAM,IAAI+B,cAAc,CAACC,GAAG,CAACK,UAAU,IAAI,CAAG9B,EAAAA,mCAAiB,CAACH,WAAW,CAAC,CAAIiC,CAAAA,EAAAA,UAAU,CAACnC,KAAK,CAAA,CAAA,CAAG,CAAC,CAACsB,IAAI,CAAC,EAAE,CAAC,CAAA;AAE7G,MAAA,SAAA;AACF,KAAA;AAEA,IAAA,IAAIc,iBAAQ,CAACpC,KAAK,CAAC,EAAE;AACnB,MAAA,IAAIqC,iCAAgB,CAACtC,QAAQ,CAAC,EAAE;AAC9B,QAAA,MAAMuC,cAAc,GAAGC,4CAAuB,CAACxC,QAAQ,CAAC,CAAA;QACxD,MAAM,CAACyC,SAAS,EAAEC,SAAS,CAAC,GAAG9C,sBAAsB,CAACK,KAAK,CAAC,CAAA;AAE5DH,QAAAA,MAAM,IAAI,CAAA,EAAGyC,cAAc,CAAA,CAAA,EAAIE,SAAS,CAAG,CAAA,CAAA,CAAA;AAC3C1C,QAAAA,MAAM,IAAI,CAAA,EAAGwC,cAAc,CAAA,CAAA,EAAIG,SAAS,CAAG,CAAA,CAAA,CAAA;AAE3C,QAAA,SAAA;AACF,OAAA;AAEA,MAAA,IACEC,yCAAoB,CAAC3C,QAAQ,CAAC,IAC9B4C,+BAAe,CAAC5C,QAAQ,CAAC,IACzB6C,6CAAsB,CAAC7C,QAAQ,CAAC,IAChC8C,iDAAwB,CAAC9C,QAAQ,CAAC,EAClC;QACA,MAAM,CAACyC,SAAS,EAAEC,SAAS,CAAC,GAAG9C,sBAAsB,CAACK,KAAK,CAAC,CAAA;AAE5DH,QAAAA,MAAM,IAAI,CAAA,EAAGE,QAAQ,CAAA,CAAA,EAAIyC,SAAS,CAAG,CAAA,CAAA,CAAA;AACrC1C,QAAAA,MAAM,IAAI,CAAA,EAAGC,QAAQ,CAAA,CAAA,EAAI0C,SAAS,CAAG,CAAA,CAAA,CAAA;AAErC,QAAA,SAAA;AACF,OAAA;AACF,KAAA;AAEAK,IAAAA,+CAAuB,CAAC/C,QAAQ,EAAEC,KAA0B,CAAC,CAAA;AAC/D,GAAA;AAEA,EAAA,OAAO,CAACH,MAAM,EAAEC,MAAM,CAAC,CAAA;AACzB,CAAA;AAEA;;AAEG;SACaiD,sBAAsBA,CACpCnD,MAAyB,EACzBoD,oBAA4B,EAAE,EAAA;EAE9B,MAAM,CAACC,OAAO,EAAEC,OAAO,CAAC,GAAGvD,sBAAsB,CAACC,MAAM,CAAC,CAAA;EAEzD,MAAMuD,YAAY,GAAGlC,2BAAiB,GAAGC,2BAAU,CAAC8B,iBAAiB,GAAGC,OAAO,CAAC,CAAA;AAChF,EAAA,MAAM,CAACpD,MAAM,EAAEuD,aAAa,CAAC,GAAGC,yCAAoB,CAAC,CAAIF,CAAAA,EAAAA,YAAY,CAAIF,CAAAA,EAAAA,OAAO,GAAG,CAAC,CAAA;AAEpF,EAAA,MAAMK,UAAU,GAAGF,aAAa,CAAC7B,MAAM,GAAG,CAAC,CAAA;EAE3C,IAAI0B,OAAO,KAAKC,OAAO,EAAE;AACvB,IAAA,OAAO,CAACC,YAAY,EAAE,IAAI,EAAEG,UAAU,GAAG;AAAEC,MAAAA,CAAC,EAAE1D,MAAM;AAAE2D,MAAAA,CAAC,EAAEJ,aAAAA;KAAe,GAAGvD,MAAM,CAAC,CAAA;AACpF,GAAA;EAEA,MAAM4D,YAAY,GAAGxC,2BAAiB,GAAGC,2BAAU,CAAC8B,iBAAiB,GAAGE,OAAO,CAAC,CAAA;AAChF,EAAA,MAAM,CAACpD,MAAM,EAAE4D,aAAa,CAAC,GAAGL,yCAAoB,CAAC,CAAII,CAAAA,EAAAA,YAAY,CAAIP,CAAAA,EAAAA,OAAO,GAAG,CAAC,CAAA;AAEpF,EAAA,OAAO,CACLC,YAAY,EACZM,YAAY,EACZH,UAAU,GAAG;AAAEC,IAAAA,CAAC,EAAE1D,MAAM,CAAC8D,MAAM,CAAC7D,MAAM,CAAC;AAAE0D,IAAAA,CAAC,EAAEJ,aAAa,CAACO,MAAM,CAACD,aAAa,CAAA;AAAG,GAAA,GAAG7D,MAAM,CAAC8D,MAAM,CAAC7D,MAAM,CAAC,CAC1G,CAAA;AACH;;;;"}