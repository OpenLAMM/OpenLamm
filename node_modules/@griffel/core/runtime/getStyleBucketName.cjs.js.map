{"version":3,"file":"getStyleBucketName.cjs.js","sources":["../../../../packages/core/src/runtime/getStyleBucketName.ts"],"sourcesContent":["import type { StyleBucketName } from '../types';\nimport type { AtRules } from './utils/types';\n\n/**\n * Maps the long pseudo name to the short pseudo name. Pseudos that match here will be ordered, everything else will\n * make their way to default style bucket. We reduce the pseudo name to save bundlesize.\n * Thankfully there aren't any overlaps, see: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes.\n */\nconst pseudosMap: Record<string, StyleBucketName | undefined> = {\n  // :focus-within\n  'us-w': 'w',\n  // :focus-visible\n  'us-v': 'i',\n\n  // :link\n  nk: 'l',\n  // :visited\n  si: 'v',\n  // :focus\n  cu: 'f',\n  // :hover\n  ve: 'h',\n  // :active\n  ti: 'a',\n};\n\n/**\n * Gets the bucket depending on the pseudo.\n *\n * Input:\n *\n * ```\n * \":hover\"\n * \":focus:hover\"\n * ```\n *\n * Output:\n *\n * ```\n * \"h\"\n * \"f\"\n * ```\n *\n * @internal\n */\nexport function getStyleBucketName(selectors: string[], atRules: AtRules): StyleBucketName {\n  if (atRules.media) {\n    return 'm';\n  }\n\n  // We are grouping all the at-rules like @supports etc. under `t` bucket.\n  if (atRules.layer || atRules.supports) {\n    return 't';\n  }\n\n  if (atRules.container) {\n    return 'c';\n  }\n\n  if (selectors.length > 0) {\n    const normalizedPseudo = selectors[0].trim();\n\n    if (normalizedPseudo.charCodeAt(0) === 58 /* \":\" */) {\n      // We send through a subset of the string instead of the full pseudo name.\n      // For example:\n      // - `\"focus-visible\"` name would instead of `\"us-v\"`.\n      // - `\"focus\"` name would instead of `\"us\"`.\n      // Return a mapped pseudo else default bucket.\n\n      return (\n        pseudosMap[normalizedPseudo.slice(4, 8)] /* allows to avoid collisions between \"focus-visible\" & \"focus\" */ ||\n        pseudosMap[normalizedPseudo.slice(3, 5)] ||\n        'd'\n      );\n    }\n  }\n\n  // Return default bucket\n  return 'd';\n}\n"],"names":["pseudosMap","nk","si","cu","ve","ti","getStyleBucketName","selectors","atRules","media","layer","supports","container","length","normalizedPseudo","trim","charCodeAt","slice"],"mappings":";;AAGA;;;;AAIG;AACH,MAAMA,UAAU,GAAgD;AAC9D;AACA,EAAA,MAAM,EAAE,GAAG;AACX;AACA,EAAA,MAAM,EAAE,GAAG;AAEX;AACAC,EAAAA,EAAE,EAAE,GAAG;AACP;AACAC,EAAAA,EAAE,EAAE,GAAG;AACP;AACAC,EAAAA,EAAE,EAAE,GAAG;AACP;AACAC,EAAAA,EAAE,EAAE,GAAG;AACP;AACAC,EAAAA,EAAE,EAAE,GAAA;CACL,CAAA;AAED;;;;;;;;;;;;;;;;;;AAkBG;AACa,SAAAC,kBAAkBA,CAACC,SAAmB,EAAEC,OAAgB,EAAA;EACtE,IAAIA,OAAO,CAACC,KAAK,EAAE;AACjB,IAAA,OAAO,GAAG,CAAA;AACZ,GAAA;AAEA;AACA,EAAA,IAAID,OAAO,CAACE,KAAK,IAAIF,OAAO,CAACG,QAAQ,EAAE;AACrC,IAAA,OAAO,GAAG,CAAA;AACZ,GAAA;EAEA,IAAIH,OAAO,CAACI,SAAS,EAAE;AACrB,IAAA,OAAO,GAAG,CAAA;AACZ,GAAA;AAEA,EAAA,IAAIL,SAAS,CAACM,MAAM,GAAG,CAAC,EAAE;IACxB,MAAMC,gBAAgB,GAAGP,SAAS,CAAC,CAAC,CAAC,CAACQ,IAAI,EAAE,CAAA;IAE5C,IAAID,gBAAgB,CAACE,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,YAAY;AACnD;AACA;AACA;AACA;AACA;MAEA,OACEhB,UAAU,CAACc,gBAAgB,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,uEACxCjB,UAAU,CAACc,gBAAgB,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IACxC,GAAG,CAAA;AAEP,KAAA;AACF,GAAA;AAEA;AACA,EAAA,OAAO,GAAG,CAAA;AACZ;;;;"}