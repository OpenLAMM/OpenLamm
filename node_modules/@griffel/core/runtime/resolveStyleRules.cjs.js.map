{"version":3,"file":"resolveStyleRules.cjs.js","sources":["../../../../packages/core/src/runtime/resolveStyleRules.ts"],"sourcesContent":["import hashString from '@emotion/hash';\nimport type { GriffelAnimation, GriffelStyle } from '@griffel/style-types';\nimport { convert, convertProperty } from 'rtl-css-js/core';\n\nimport { HASH_PREFIX, RESET, UNSUPPORTED_CSS_PROPERTIES } from '../constants';\nimport type { CSSClassesMap, CSSRulesByBucket, StyleBucketName, CSSBucketEntry } from '../types';\nimport type { CompileAtomicCSSOptions } from './compileAtomicCSSRule';\nimport { compileAtomicCSSRule } from './compileAtomicCSSRule';\nimport { compileKeyframeRule, compileKeyframesCSS } from './compileKeyframeCSS';\nimport { shorthands } from './shorthands';\nimport { generateCombinedQuery } from './utils/generateCombinedMediaQuery';\nimport { isMediaQuerySelector } from './utils/isMediaQuerySelector';\nimport { isLayerSelector } from './utils/isLayerSelector';\nimport { isNestedSelector } from './utils/isNestedSelector';\nimport { isSupportQuerySelector } from './utils/isSupportQuerySelector';\nimport { isContainerQuerySelector } from './utils/isContainerQuerySelector';\nimport { normalizeNestedProperty } from './utils/normalizeNestedProperty';\nimport { isObject } from './utils/isObject';\nimport { getStyleBucketName } from './getStyleBucketName';\nimport { hashClassName } from './utils/hashClassName';\nimport { hashPropertyKey } from './utils/hashPropertyKey';\nimport { isResetValue } from './utils/isResetValue';\nimport { trimSelector } from './utils/trimSelector';\nimport type { AtRules } from './utils/types';\nimport { warnAboutUnresolvedRule } from './warnings/warnAboutUnresolvedRule';\nimport { warnAboutUnsupportedProperties } from './warnings/warnAboutUnsupportedProperties';\n\nfunction getShorthandDefinition(property: string): [number, string[]] | undefined {\n  return shorthands[property as keyof typeof shorthands];\n}\n\nfunction computePropertyPriority(shorthand: [number, string[]] | undefined): number {\n  return shorthand?.[0] ?? 0;\n}\n\nfunction pushToClassesMap(\n  classesMap: CSSClassesMap,\n  propertyKey: string,\n  ltrClassname: string | 0,\n  rtlClassname: string | undefined,\n) {\n  classesMap[propertyKey] = rtlClassname ? [ltrClassname as string, rtlClassname] : ltrClassname;\n}\n\nfunction createBucketEntry(cssRule: string, metadata: [string, unknown][]): CSSBucketEntry {\n  if (metadata.length > 0) {\n    return [cssRule, Object.fromEntries(metadata)];\n  }\n\n  return cssRule;\n}\n\nfunction pushToCSSRules(\n  cssRulesByBucket: CSSRulesByBucket,\n  styleBucketName: StyleBucketName,\n  ltrCSS: string | undefined,\n  rtlCSS: string | undefined,\n  media: string | undefined,\n  priority: number,\n) {\n  const metadata: [string, unknown][] = [];\n\n  if (priority !== 0) {\n    metadata.push(['p', priority]);\n  }\n\n  if (styleBucketName === 'm' && media) {\n    metadata.push(['m', media]);\n  }\n\n  cssRulesByBucket[styleBucketName] ??= [];\n\n  if (ltrCSS) {\n    cssRulesByBucket[styleBucketName]!.push(createBucketEntry(ltrCSS, metadata));\n  }\n\n  if (rtlCSS) {\n    cssRulesByBucket[styleBucketName]!.push(createBucketEntry(rtlCSS, metadata));\n  }\n}\n\n/**\n * Transforms input styles to classes maps & CSS rules.\n *\n * @internal\n */\nexport function resolveStyleRules(\n  styles: GriffelStyle,\n  classNameHashSalt: string = '',\n  selectors: string[] = [],\n  atRules: AtRules = {\n    container: '',\n    layer: '',\n    media: '',\n    supports: '',\n  },\n  cssClassesMap: CSSClassesMap = {},\n  cssRulesByBucket: CSSRulesByBucket = {},\n  rtlValue?: string,\n): [CSSClassesMap, CSSRulesByBucket] {\n  // eslint-disable-next-line guard-for-in\n  for (const property in styles) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (UNSUPPORTED_CSS_PROPERTIES.hasOwnProperty(property)) {\n      warnAboutUnsupportedProperties(property, styles[property as keyof GriffelStyle]);\n      continue;\n    }\n\n    const value = styles[property as keyof GriffelStyle];\n\n    // eslint-disable-next-line eqeqeq\n    if (value == null) {\n      continue;\n    }\n\n    if (isResetValue(value)) {\n      const selector = trimSelector(selectors.join(''));\n      // uniq key based on a hash of property & selector, used for merging later\n      const key = hashPropertyKey(selector, property, atRules);\n\n      pushToClassesMap(cssClassesMap, key, 0, undefined);\n      continue;\n    }\n\n    if (typeof value === 'string' || typeof value === 'number') {\n      const selector = trimSelector(selectors.join(''));\n      const shorthand = getShorthandDefinition(property);\n\n      if (shorthand) {\n        const shorthandProperties = shorthand[1];\n        const shorthandResetStyles = Object.fromEntries(shorthandProperties.map(property => [property, RESET]));\n\n        resolveStyleRules(shorthandResetStyles, classNameHashSalt, selectors, atRules, cssClassesMap, cssRulesByBucket);\n      }\n\n      // uniq key based on a hash of property & selector, used for merging later\n      const key = hashPropertyKey(selector, property, atRules);\n      const className = hashClassName(\n        {\n          value: value.toString(),\n          salt: classNameHashSalt,\n          selector,\n          property,\n        },\n        atRules,\n      );\n\n      const rtlDefinition = (rtlValue && { key: property, value: rtlValue }) || convertProperty(property, value);\n      const flippedInRtl = rtlDefinition.key !== property || rtlDefinition.value !== value;\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName(\n            {\n              value: rtlDefinition.value.toString(),\n              property: rtlDefinition.key,\n              salt: classNameHashSalt,\n              selector,\n            },\n            atRules,\n          )\n        : undefined;\n      const rtlCompileOptions: Partial<CompileAtomicCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinition.key,\n            rtlValue: rtlDefinition.value,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(selectors, atRules);\n      const [ltrCSS, rtlCSS] = compileAtomicCSSRule(\n        {\n          className,\n          selectors,\n          property,\n          value,\n          ...rtlCompileOptions,\n        },\n        atRules,\n      );\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(\n        cssRulesByBucket,\n        styleBucketName,\n        ltrCSS,\n        rtlCSS,\n        atRules.media,\n        computePropertyPriority(shorthand),\n      );\n    } else if (property === 'animationName') {\n      const animationNameValue = Array.isArray(value) ? (value as GriffelAnimation[]) : [value as GriffelAnimation];\n\n      const animationNames: string[] = [];\n      const rtlAnimationNames: string[] = [];\n\n      for (const keyframeObject of animationNameValue) {\n        const keyframeCSS = compileKeyframeRule(keyframeObject);\n        const rtlKeyframeCSS = compileKeyframeRule(convert(keyframeObject));\n\n        const animationName = HASH_PREFIX + hashString(keyframeCSS);\n        let rtlAnimationName: string;\n\n        const keyframeRules = compileKeyframesCSS(animationName, keyframeCSS);\n        let rtlKeyframeRules: string[] = [];\n\n        if (keyframeCSS === rtlKeyframeCSS) {\n          // If CSS for LTR & RTL are same we will re-use animationName from LTR to avoid duplication of rules in output\n          rtlAnimationName = animationName;\n        } else {\n          rtlAnimationName = HASH_PREFIX + hashString(rtlKeyframeCSS);\n          rtlKeyframeRules = compileKeyframesCSS(rtlAnimationName, rtlKeyframeCSS);\n        }\n\n        for (let i = 0; i < keyframeRules.length; i++) {\n          pushToCSSRules(\n            cssRulesByBucket,\n            // keyframes styles should be inserted into own bucket\n            'k',\n            keyframeRules[i],\n            rtlKeyframeRules[i],\n            atRules.media,\n            // keyframes always have default priority\n            0,\n          );\n        }\n\n        animationNames.push(animationName);\n        rtlAnimationNames.push(rtlAnimationName);\n      }\n\n      resolveStyleRules(\n        { animationName: animationNames.join(', ') },\n        classNameHashSalt,\n        selectors,\n        atRules,\n        cssClassesMap,\n        cssRulesByBucket,\n        rtlAnimationNames.join(', '),\n      );\n    } else if (Array.isArray(value)) {\n      // not animationName property but array in the value => fallback values\n      if (value.length === 0) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            `makeStyles(): An empty array was passed as input to \"${property}\", the property will be omitted in the styles.`,\n          );\n        }\n        continue;\n      }\n\n      const selector = trimSelector(selectors.join(''));\n      const shorthand = getShorthandDefinition(property);\n\n      if (shorthand) {\n        const shorthandProperties = shorthand[1];\n        const shorthandResetStyles = Object.fromEntries(shorthandProperties.map(property => [property, RESET]));\n\n        resolveStyleRules(shorthandResetStyles, classNameHashSalt, selectors, atRules, cssClassesMap, cssRulesByBucket);\n      }\n\n      const key = hashPropertyKey(selector, property, atRules);\n      const className = hashClassName(\n        {\n          value: value.map(v => (v ?? '').toString()).join(';'),\n          salt: classNameHashSalt,\n          selector,\n          property,\n        },\n        atRules,\n      );\n\n      const rtlDefinitions = value.map(v => convertProperty(property, v!));\n      const rtlPropertyConsistent = !rtlDefinitions.some(v => v.key !== rtlDefinitions[0].key);\n\n      if (!rtlPropertyConsistent) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(\n            'makeStyles(): mixing CSS fallback values which result in multiple CSS properties in RTL is not supported.',\n          );\n        }\n        continue;\n      }\n\n      const flippedInRtl = rtlDefinitions[0].key !== property || rtlDefinitions.some((v, i) => v.value !== value[i]);\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName(\n            {\n              value: rtlDefinitions.map(v => (v?.value ?? '').toString()).join(';'),\n              salt: classNameHashSalt,\n              property: rtlDefinitions[0].key,\n              selector,\n            },\n            atRules,\n          )\n        : undefined;\n\n      const rtlCompileOptions: Partial<CompileAtomicCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinitions[0].key,\n            rtlValue: rtlDefinitions.map(d => d.value) as unknown as Array<string | number>,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(selectors, atRules);\n      const [ltrCSS, rtlCSS] = compileAtomicCSSRule(\n        {\n          className,\n          selectors,\n          property,\n          value: value as unknown as Array<string | number>,\n          ...rtlCompileOptions,\n        },\n        atRules,\n      );\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(\n        cssRulesByBucket,\n        styleBucketName,\n        ltrCSS,\n        rtlCSS,\n        atRules.media,\n        computePropertyPriority(shorthand),\n      );\n    } else if (isObject(value)) {\n      if (isNestedSelector(property)) {\n        resolveStyleRules(\n          value as GriffelStyle,\n          classNameHashSalt,\n          selectors.concat(normalizeNestedProperty(property)),\n          atRules,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isMediaQuerySelector(property)) {\n        const combinedMediaQuery = generateCombinedQuery(atRules.media, property.slice(6).trim());\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          classNameHashSalt,\n          selectors,\n          { ...atRules, media: combinedMediaQuery },\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isLayerSelector(property)) {\n        const combinedLayerQuery = (atRules.layer ? `${atRules.layer}.` : '') + property.slice(6).trim();\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          classNameHashSalt,\n          selectors,\n          { ...atRules, layer: combinedLayerQuery },\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isSupportQuerySelector(property)) {\n        const combinedSupportQuery = generateCombinedQuery(atRules.supports, property.slice(9).trim());\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          classNameHashSalt,\n          selectors,\n          { ...atRules, supports: combinedSupportQuery },\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isContainerQuerySelector(property)) {\n        // TODO implement nested container queries if needed\n        // The only way to target multiple containers is to nest container queries\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/@container#nested_container_queries\n        const containerQuery = property.slice(10).trim();\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          classNameHashSalt,\n          selectors,\n          { ...atRules, container: containerQuery },\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else {\n        warnAboutUnresolvedRule(property, value);\n      }\n    }\n  }\n\n  return [cssClassesMap, cssRulesByBucket];\n}\n"],"names":["getShorthandDefinition","property","shorthands","computePropertyPriority","shorthand","_a","pushToClassesMap","classesMap","propertyKey","ltrClassname","rtlClassname","createBucketEntry","cssRule","metadata","length","Object","fromEntries","pushToCSSRules","cssRulesByBucket","styleBucketName","ltrCSS","rtlCSS","media","priority","push","resolveStyleRules","styles","classNameHashSalt","selectors","atRules","container","layer","supports","cssClassesMap","rtlValue","UNSUPPORTED_CSS_PROPERTIES","hasOwnProperty","warnAboutUnsupportedProperties","value","isResetValue","selector","trimSelector","join","key","hashPropertyKey","undefined","shorthandProperties","shorthandResetStyles","map","RESET","className","hashClassName","toString","salt","rtlDefinition","convertProperty","flippedInRtl","rtlClassName","rtlCompileOptions","rtlProperty","getStyleBucketName","compileAtomicCSSRule","assign","animationNameValue","Array","isArray","animationNames","rtlAnimationNames","keyframeObject","keyframeCSS","compileKeyframeRule","rtlKeyframeCSS","convert","animationName","HASH_PREFIX","hashString","rtlAnimationName","keyframeRules","compileKeyframesCSS","rtlKeyframeRules","i","process","env","NODE_ENV","console","warn","v","rtlDefinitions","rtlPropertyConsistent","some","error","d","isObject","isNestedSelector","concat","normalizeNestedProperty","isMediaQuerySelector","combinedMediaQuery","generateCombinedQuery","slice","trim","isLayerSelector","combinedLayerQuery","isSupportQuerySelector","combinedSupportQuery","isContainerQuerySelector","containerQuery","warnAboutUnresolvedRule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAASA,sBAAsBA,CAACC,QAAgB,EAAA;EAC9C,OAAOC,qBAAU,CAACD,QAAmC,CAAC,CAAA;AACxD,CAAA;AAEA,SAASE,uBAAuBA,CAACC,SAAyC,EAAA;;AACxE,EAAA,OAAO,CAAAC,EAAA,GAAAD,SAAS,KAAA,IAAA,IAATA,SAAS,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAATA,SAAS,CAAG,CAAC,CAAC,MAAI,IAAA,IAAAC,EAAA,KAAA,KAAA,CAAA,GAAAA,EAAA,GAAA,CAAC,CAAA;AAC5B,CAAA;AAEA,SAASC,gBAAgBA,CACvBC,UAAyB,EACzBC,WAAmB,EACnBC,YAAwB,EACxBC,YAAgC,EAAA;AAEhCH,EAAAA,UAAU,CAACC,WAAW,CAAC,GAAGE,YAAY,GAAG,CAACD,YAAsB,EAAEC,YAAY,CAAC,GAAGD,YAAY,CAAA;AAChG,CAAA;AAEA,SAASE,iBAAiBA,CAACC,OAAe,EAAEC,QAA6B,EAAA;AACvE,EAAA,IAAIA,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;IACvB,OAAO,CAACF,OAAO,EAAEG,MAAM,CAACC,WAAW,CAACH,QAAQ,CAAC,CAAC,CAAA;AAChD,GAAA;AAEA,EAAA,OAAOD,OAAO,CAAA;AAChB,CAAA;AAEA,SAASK,cAAcA,CACrBC,gBAAkC,EAClCC,eAAgC,EAChCC,MAA0B,EAC1BC,MAA0B,EAC1BC,KAAyB,EACzBC,QAAgB,EAAA;;EAEhB,MAAMV,QAAQ,GAAwB,EAAE,CAAA;EAExC,IAAIU,QAAQ,KAAK,CAAC,EAAE;IAClBV,QAAQ,CAACW,IAAI,CAAC,CAAC,GAAG,EAAED,QAAQ,CAAC,CAAC,CAAA;AAChC,GAAA;AAEA,EAAA,IAAIJ,eAAe,KAAK,GAAG,IAAIG,KAAK,EAAE;IACpCT,QAAQ,CAACW,IAAI,CAAC,CAAC,GAAG,EAAEF,KAAK,CAAC,CAAC,CAAA;AAC7B,GAAA;EAEA,CAAAjB,EAAA,GAAAa,gBAAgB,CAACC,eAAe,CAAA,MAAA,IAAA,IAAAd,EAAA,KAAA,KAAA,CAAA,GAAAA,EAAA,GAAhCa,gBAAgB,CAACC,eAAe,CAAM,GAAA,EAAG,CAAA;AAEzC,EAAA,IAAIC,MAAM,EAAE;AACVF,IAAAA,gBAAgB,CAACC,eAAe,CAAE,CAACK,IAAI,CAACb,iBAAiB,CAACS,MAAM,EAAEP,QAAQ,CAAC,CAAC,CAAA;AAC9E,GAAA;AAEA,EAAA,IAAIQ,MAAM,EAAE;AACVH,IAAAA,gBAAgB,CAACC,eAAe,CAAE,CAACK,IAAI,CAACb,iBAAiB,CAACU,MAAM,EAAER,QAAQ,CAAC,CAAC,CAAA;AAC9E,GAAA;AACF,CAAA;AAEA;;;;AAIG;AACG,SAAUY,iBAAiBA,CAC/BC,MAAoB,EACpBC,iBAA4B,GAAA,EAAE,EAC9BC,SAAA,GAAsB,EAAE,EACxBC,OAAmB,GAAA;AACjBC,EAAAA,SAAS,EAAE,EAAE;AACbC,EAAAA,KAAK,EAAE,EAAE;AACTT,EAAAA,KAAK,EAAE,EAAE;AACTU,EAAAA,QAAQ,EAAE,EAAA;AACX,CAAA,EACDC,gBAA+B,EAAE,EACjCf,gBAAqC,GAAA,EAAE,EACvCgB,QAAiB,EAAA;AAEjB;AACA,EAAA,KAAK,MAAMjC,QAAQ,IAAIyB,MAAM,EAAE;AAC7B;AACA,IAAA,IAAIS,oCAA0B,CAACC,cAAc,CAACnC,QAAQ,CAAC,EAAE;AACvDoC,MAAAA,6DAA8B,CAACpC,QAAQ,EAAEyB,MAAM,CAACzB,QAA8B,CAAC,CAAC,CAAA;AAChF,MAAA,SAAA;AACF,KAAA;AAEA,IAAA,MAAMqC,KAAK,GAAGZ,MAAM,CAACzB,QAA8B,CAAC,CAAA;AAEpD;IACA,IAAIqC,KAAK,IAAI,IAAI,EAAE;AACjB,MAAA,SAAA;AACF,KAAA;AAEA,IAAA,IAAIC,yBAAY,CAACD,KAAK,CAAC,EAAE;MACvB,MAAME,QAAQ,GAAGC,yBAAY,CAACb,SAAS,CAACc,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA;AACjD;MACA,MAAMC,GAAG,GAAGC,+BAAe,CAACJ,QAAQ,EAAEvC,QAAQ,EAAE4B,OAAO,CAAC,CAAA;MAExDvB,gBAAgB,CAAC2B,aAAa,EAAEU,GAAG,EAAE,CAAC,EAAEE,SAAS,CAAC,CAAA;AAClD,MAAA,SAAA;AACF,KAAA;IAEA,IAAI,OAAOP,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC1D,MAAME,QAAQ,GAAGC,yBAAY,CAACb,SAAS,CAACc,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA;AACjD,MAAA,MAAMtC,SAAS,GAAGJ,sBAAsB,CAACC,QAAQ,CAAC,CAAA;AAElD,MAAA,IAAIG,SAAS,EAAE;AACb,QAAA,MAAM0C,mBAAmB,GAAG1C,SAAS,CAAC,CAAC,CAAC,CAAA;AACxC,QAAA,MAAM2C,oBAAoB,GAAGhC,MAAM,CAACC,WAAW,CAAC8B,mBAAmB,CAACE,GAAG,CAAC/C,QAAQ,IAAI,CAACA,QAAQ,EAAEgD,eAAK,CAAC,CAAC,CAAC,CAAA;AAEvGxB,QAAAA,iBAAiB,CAACsB,oBAAoB,EAAEpB,iBAAiB,EAAEC,SAAS,EAAEC,OAAO,EAAEI,aAAa,EAAEf,gBAAgB,CAAC,CAAA;AACjH,OAAA;AAEA;MACA,MAAMyB,GAAG,GAAGC,+BAAe,CAACJ,QAAQ,EAAEvC,QAAQ,EAAE4B,OAAO,CAAC,CAAA;MACxD,MAAMqB,SAAS,GAAGC,2BAAa,CAC7B;AACEb,QAAAA,KAAK,EAAEA,KAAK,CAACc,QAAQ,EAAE;AACvBC,QAAAA,IAAI,EAAE1B,iBAAiB;QACvBa,QAAQ;AACRvC,QAAAA,QAAAA;OACD,EACD4B,OAAO,CACR,CAAA;MAED,MAAMyB,aAAa,GAAIpB,QAAQ,IAAI;AAAES,QAAAA,GAAG,EAAE1C,QAAQ;AAAEqC,QAAAA,KAAK,EAAEJ,QAAAA;AAAQ,OAAE,IAAKqB,oBAAe,CAACtD,QAAQ,EAAEqC,KAAK,CAAC,CAAA;AAC1G,MAAA,MAAMkB,YAAY,GAAGF,aAAa,CAACX,GAAG,KAAK1C,QAAQ,IAAIqD,aAAa,CAAChB,KAAK,KAAKA,KAAK,CAAA;AAEpF,MAAA,MAAMmB,YAAY,GAAGD,YAAY,GAC7BL,2BAAa,CACX;AACEb,QAAAA,KAAK,EAAEgB,aAAa,CAAChB,KAAK,CAACc,QAAQ,EAAE;QACrCnD,QAAQ,EAAEqD,aAAa,CAACX,GAAG;AAC3BU,QAAAA,IAAI,EAAE1B,iBAAiB;AACvBa,QAAAA,QAAAA;AACD,OAAA,EACDX,OAAO,CACR,GACDgB,SAAS,CAAA;MACb,MAAMa,iBAAiB,GAAiDF,YAAY,GAChF;QACEC,YAAY;QACZE,WAAW,EAAEL,aAAa,CAACX,GAAG;QAC9BT,QAAQ,EAAEoB,aAAa,CAAChB,KAAAA;AACzB,OAAA,GACDO,SAAS,CAAA;AAEb,MAAA,MAAM1B,eAAe,GAAGyC,qCAAkB,CAAChC,SAAS,EAAEC,OAAO,CAAC,CAAA;MAC9D,MAAM,CAACT,MAAM,EAAEC,MAAM,CAAC,GAAGwC,yCAAoB,CAAA9C,MAAA,CAAA+C,MAAA,CAAA;QAEzCZ,SAAS;QACTtB,SAAS;QACT3B,QAAQ;AACRqC,QAAAA,KAAAA;OACGoB,EAAAA,iBAAiB,CAEtB7B,EAAAA,OAAO,CACR,CAAA;MAEDvB,gBAAgB,CAAC2B,aAAa,EAAEU,GAAG,EAAEO,SAAS,EAAEO,YAAY,CAAC,CAAA;AAC7DxC,MAAAA,cAAc,CACZC,gBAAgB,EAChBC,eAAe,EACfC,MAAM,EACNC,MAAM,EACNQ,OAAO,CAACP,KAAK,EACbnB,uBAAuB,CAACC,SAAS,CAAC,CACnC,CAAA;AACH,KAAC,MAAM,IAAIH,QAAQ,KAAK,eAAe,EAAE;AACvC,MAAA,MAAM8D,kBAAkB,GAAGC,KAAK,CAACC,OAAO,CAAC3B,KAAK,CAAC,GAAIA,KAA4B,GAAG,CAACA,KAAyB,CAAC,CAAA;MAE7G,MAAM4B,cAAc,GAAa,EAAE,CAAA;MACnC,MAAMC,iBAAiB,GAAa,EAAE,CAAA;AAEtC,MAAA,KAAK,MAAMC,cAAc,IAAIL,kBAAkB,EAAE;AAC/C,QAAA,MAAMM,WAAW,GAAGC,sCAAmB,CAACF,cAAc,CAAC,CAAA;QACvD,MAAMG,cAAc,GAAGD,sCAAmB,CAACE,YAAO,CAACJ,cAAc,CAAC,CAAC,CAAA;AAEnE,QAAA,MAAMK,aAAa,GAAGC,qBAAW,GAAGC,2BAAU,CAACN,WAAW,CAAC,CAAA;AAC3D,QAAA,IAAIO,gBAAwB,CAAA;AAE5B,QAAA,MAAMC,aAAa,GAAGC,sCAAmB,CAACL,aAAa,EAAEJ,WAAW,CAAC,CAAA;QACrE,IAAIU,gBAAgB,GAAa,EAAE,CAAA;QAEnC,IAAIV,WAAW,KAAKE,cAAc,EAAE;AAClC;AACAK,UAAAA,gBAAgB,GAAGH,aAAa,CAAA;AAClC,SAAC,MAAM;AACLG,UAAAA,gBAAgB,GAAGF,qBAAW,GAAGC,2BAAU,CAACJ,cAAc,CAAC,CAAA;AAC3DQ,UAAAA,gBAAgB,GAAGD,sCAAmB,CAACF,gBAAgB,EAAEL,cAAc,CAAC,CAAA;AAC1E,SAAA;AAEA,QAAA,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,aAAa,CAAC/D,MAAM,EAAEkE,CAAC,EAAE,EAAE;AAC7C/D,UAAAA,cAAc,CACZC,gBAAgB;AAChB;AACA,UAAA,GAAG,EACH2D,aAAa,CAACG,CAAC,CAAC,EAChBD,gBAAgB,CAACC,CAAC,CAAC,EACnBnD,OAAO,CAACP,KAAK;AACb;AACA,UAAA,CAAC,CACF,CAAA;AACH,SAAA;AAEA4C,QAAAA,cAAc,CAAC1C,IAAI,CAACiD,aAAa,CAAC,CAAA;AAClCN,QAAAA,iBAAiB,CAAC3C,IAAI,CAACoD,gBAAgB,CAAC,CAAA;AAC1C,OAAA;AAEAnD,MAAAA,iBAAiB,CACf;AAAEgD,QAAAA,aAAa,EAAEP,cAAc,CAACxB,IAAI,CAAC,IAAI,CAAA;AAAG,OAAA,EAC5Cf,iBAAiB,EACjBC,SAAS,EACTC,OAAO,EACPI,aAAa,EACbf,gBAAgB,EAChBiD,iBAAiB,CAACzB,IAAI,CAAC,IAAI,CAAC,CAC7B,CAAA;KACF,MAAM,IAAIsB,KAAK,CAACC,OAAO,CAAC3B,KAAK,CAAC,EAAE;AAC/B;AACA,MAAA,IAAIA,KAAK,CAACxB,MAAM,KAAK,CAAC,EAAE;AACtB,QAAA,IAAImE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;AACzCC,UAAAA,OAAO,CAACC,IAAI,CACV,CAAwDpF,qDAAAA,EAAAA,QAAQ,gDAAgD,CACjH,CAAA;AACH,SAAA;AACA,QAAA,SAAA;AACF,OAAA;MAEA,MAAMuC,QAAQ,GAAGC,yBAAY,CAACb,SAAS,CAACc,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA;AACjD,MAAA,MAAMtC,SAAS,GAAGJ,sBAAsB,CAACC,QAAQ,CAAC,CAAA;AAElD,MAAA,IAAIG,SAAS,EAAE;AACb,QAAA,MAAM0C,mBAAmB,GAAG1C,SAAS,CAAC,CAAC,CAAC,CAAA;AACxC,QAAA,MAAM2C,oBAAoB,GAAGhC,MAAM,CAACC,WAAW,CAAC8B,mBAAmB,CAACE,GAAG,CAAC/C,QAAQ,IAAI,CAACA,QAAQ,EAAEgD,eAAK,CAAC,CAAC,CAAC,CAAA;AAEvGxB,QAAAA,iBAAiB,CAACsB,oBAAoB,EAAEpB,iBAAiB,EAAEC,SAAS,EAAEC,OAAO,EAAEI,aAAa,EAAEf,gBAAgB,CAAC,CAAA;AACjH,OAAA;MAEA,MAAMyB,GAAG,GAAGC,+BAAe,CAACJ,QAAQ,EAAEvC,QAAQ,EAAE4B,OAAO,CAAC,CAAA;MACxD,MAAMqB,SAAS,GAAGC,2BAAa,CAC7B;AACEb,QAAAA,KAAK,EAAEA,KAAK,CAACU,GAAG,CAACsC,CAAC,IAAI,CAACA,CAAC,KAAD,IAAA,IAAAA,CAAC,cAADA,CAAC,GAAI,EAAE,EAAElC,QAAQ,EAAE,CAAC,CAACV,IAAI,CAAC,GAAG,CAAC;AACrDW,QAAAA,IAAI,EAAE1B,iBAAiB;QACvBa,QAAQ;AACRvC,QAAAA,QAAAA;OACD,EACD4B,OAAO,CACR,CAAA;AAED,MAAA,MAAM0D,cAAc,GAAGjD,KAAK,CAACU,GAAG,CAACsC,CAAC,IAAI/B,oBAAe,CAACtD,QAAQ,EAAEqF,CAAE,CAAC,CAAC,CAAA;AACpE,MAAA,MAAME,qBAAqB,GAAG,CAACD,cAAc,CAACE,IAAI,CAACH,CAAC,IAAIA,CAAC,CAAC3C,GAAG,KAAK4C,cAAc,CAAC,CAAC,CAAC,CAAC5C,GAAG,CAAC,CAAA;MAExF,IAAI,CAAC6C,qBAAqB,EAAE;AAC1B,QAAA,IAAIP,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;AACzCC,UAAAA,OAAO,CAACM,KAAK,CACX,2GAA2G,CAC5G,CAAA;AACH,SAAA;AACA,QAAA,SAAA;AACF,OAAA;AAEA,MAAA,MAAMlC,YAAY,GAAG+B,cAAc,CAAC,CAAC,CAAC,CAAC5C,GAAG,KAAK1C,QAAQ,IAAIsF,cAAc,CAACE,IAAI,CAAC,CAACH,CAAC,EAAEN,CAAC,KAAKM,CAAC,CAAChD,KAAK,KAAKA,KAAK,CAAC0C,CAAC,CAAC,CAAC,CAAA;AAE9G,MAAA,MAAMvB,YAAY,GAAGD,YAAY,GAC7BL,2BAAa,CACX;AACEb,QAAAA,KAAK,EAAEiD,cAAc,CAACvC,GAAG,CAACsC,CAAC,IAAG;AAAA,UAAA,IAAAjF,EAAA,CAAA;AAAC,UAAA,OAAA,CAAC,CAAAA,EAAA,GAAAiF,CAAC,aAADA,CAAC,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAADA,CAAC,CAAEhD,KAAK,MAAA,IAAA,IAAAjC,EAAA,KAAA,KAAA,CAAA,GAAAA,EAAA,GAAI,EAAE,EAAE+C,QAAQ,EAAE,CAAA;AAAA,SAAA,CAAC,CAACV,IAAI,CAAC,GAAG,CAAC;AACrEW,QAAAA,IAAI,EAAE1B,iBAAiB;AACvB1B,QAAAA,QAAQ,EAAEsF,cAAc,CAAC,CAAC,CAAC,CAAC5C,GAAG;AAC/BH,QAAAA,QAAAA;AACD,OAAA,EACDX,OAAO,CACR,GACDgB,SAAS,CAAA;MAEb,MAAMa,iBAAiB,GAAiDF,YAAY,GAChF;QACEC,YAAY;AACZE,QAAAA,WAAW,EAAE4B,cAAc,CAAC,CAAC,CAAC,CAAC5C,GAAG;QAClCT,QAAQ,EAAEqD,cAAc,CAACvC,GAAG,CAAC2C,CAAC,IAAIA,CAAC,CAACrD,KAAK,CAAA;AAC1C,OAAA,GACDO,SAAS,CAAA;AAEb,MAAA,MAAM1B,eAAe,GAAGyC,qCAAkB,CAAChC,SAAS,EAAEC,OAAO,CAAC,CAAA;MAC9D,MAAM,CAACT,MAAM,EAAEC,MAAM,CAAC,GAAGwC,yCAAoB,CAAA9C,MAAA,CAAA+C,MAAA,CAAA;QAEzCZ,SAAS;QACTtB,SAAS;QACT3B,QAAQ;AACRqC,QAAAA,KAAK,EAAEA,KAAAA;OACJoB,EAAAA,iBAAiB,CAEtB7B,EAAAA,OAAO,CACR,CAAA;MAEDvB,gBAAgB,CAAC2B,aAAa,EAAEU,GAAG,EAAEO,SAAS,EAAEO,YAAY,CAAC,CAAA;AAC7DxC,MAAAA,cAAc,CACZC,gBAAgB,EAChBC,eAAe,EACfC,MAAM,EACNC,MAAM,EACNQ,OAAO,CAACP,KAAK,EACbnB,uBAAuB,CAACC,SAAS,CAAC,CACnC,CAAA;AACH,KAAC,MAAM,IAAIwF,iBAAQ,CAACtD,KAAK,CAAC,EAAE;AAC1B,MAAA,IAAIuD,iCAAgB,CAAC5F,QAAQ,CAAC,EAAE;QAC9BwB,iBAAiB,CACfa,KAAqB,EACrBX,iBAAiB,EACjBC,SAAS,CAACkE,MAAM,CAACC,+CAAuB,CAAC9F,QAAQ,CAAC,CAAC,EACnD4B,OAAO,EACPI,aAAa,EACbf,gBAAgB,CACjB,CAAA;AACH,OAAC,MAAM,IAAI8E,yCAAoB,CAAC/F,QAAQ,CAAC,EAAE;AACzC,QAAA,MAAMgG,kBAAkB,GAAGC,gDAAqB,CAACrE,OAAO,CAACP,KAAK,EAAErB,QAAQ,CAACkG,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAE,CAAC,CAAA;QAEzF3E,iBAAiB,CACfa,KAAqB,EACrBX,iBAAiB,EACjBC,SAAS,EAAAb,MAAA,CAAA+C,MAAA,CAAA,EAAA,EACJjC,OAAO,EAAA;AAAEP,UAAAA,KAAK,EAAE2E,kBAAAA;SACrBhE,CAAAA,EAAAA,aAAa,EACbf,gBAAgB,CACjB,CAAA;AACH,OAAC,MAAM,IAAImF,+BAAe,CAACpG,QAAQ,CAAC,EAAE;QACpC,MAAMqG,kBAAkB,GAAG,CAACzE,OAAO,CAACE,KAAK,GAAG,CAAA,EAAGF,OAAO,CAACE,KAAK,CAAA,CAAA,CAAG,GAAG,EAAE,IAAI9B,QAAQ,CAACkG,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAE,CAAA;QAEhG3E,iBAAiB,CACfa,KAAqB,EACrBX,iBAAiB,EACjBC,SAAS,EAAAb,MAAA,CAAA+C,MAAA,CAAA,EAAA,EACJjC,OAAO,EAAA;AAAEE,UAAAA,KAAK,EAAEuE,kBAAAA;SACrBrE,CAAAA,EAAAA,aAAa,EACbf,gBAAgB,CACjB,CAAA;AACH,OAAC,MAAM,IAAIqF,6CAAsB,CAACtG,QAAQ,CAAC,EAAE;AAC3C,QAAA,MAAMuG,oBAAoB,GAAGN,gDAAqB,CAACrE,OAAO,CAACG,QAAQ,EAAE/B,QAAQ,CAACkG,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAE,CAAC,CAAA;QAE9F3E,iBAAiB,CACfa,KAAqB,EACrBX,iBAAiB,EACjBC,SAAS,EAAAb,MAAA,CAAA+C,MAAA,CAAA,EAAA,EACJjC,OAAO,EAAA;AAAEG,UAAAA,QAAQ,EAAEwE,oBAAAA;SACxBvE,CAAAA,EAAAA,aAAa,EACbf,gBAAgB,CACjB,CAAA;AACH,OAAC,MAAM,IAAIuF,iDAAwB,CAACxG,QAAQ,CAAC,EAAE;AAC7C;AACA;AACA;QACA,MAAMyG,cAAc,GAAGzG,QAAQ,CAACkG,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,EAAE,CAAA;QAEhD3E,iBAAiB,CACfa,KAAqB,EACrBX,iBAAiB,EACjBC,SAAS,EAAAb,MAAA,CAAA+C,MAAA,CAAA,EAAA,EACJjC,OAAO,EAAA;AAAEC,UAAAA,SAAS,EAAE4E,cAAAA;SACzBzE,CAAAA,EAAAA,aAAa,EACbf,gBAAgB,CACjB,CAAA;AACH,OAAC,MAAM;AACLyF,QAAAA,+CAAuB,CAAC1G,QAAQ,EAAEqC,KAAK,CAAC,CAAA;AAC1C,OAAA;AACF,KAAA;AACF,GAAA;AAEA,EAAA,OAAO,CAACL,aAAa,EAAEf,gBAAgB,CAAC,CAAA;AAC1C;;;;"}