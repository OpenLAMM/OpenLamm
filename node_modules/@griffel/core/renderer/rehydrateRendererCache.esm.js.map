{"version":3,"file":"rehydrateRendererCache.esm.js","sources":["../../../../packages/core/src/renderer/rehydrateRendererCache.ts"],"sourcesContent":["import type { GriffelRenderer, StyleBucketName } from '../types';\nimport { isDevToolsEnabled, debugData } from '../devtools';\nimport { createIsomorphicStyleSheetFromElement } from './createIsomorphicStyleSheet';\nimport { getStyleSheetKeyFromElement } from './getStyleSheetForBucket';\n\n// Regexps to extract names of classes and animations\n// https://github.com/styletron/styletron/blob/e0fcae826744eb00ce679ac613a1b10d44256660/packages/styletron-engine-atomic/src/client/client.js#L8\nconst KEYFRAMES_HYDRATOR = /@(-webkit-)?keyframes ([^{]+){((?:(?:from|to|(?:\\d+\\.?\\d*%))\\{(?:[^}])*})*)}/g;\nconst AT_RULES_HYDRATOR = /@(media|supports|layer)[^{]+\\{([\\s\\S]+?})\\s*}/g;\nconst STYLES_HYDRATOR = /\\.([^{:]+)(:[^{]+)?{(?:[^}]*;)?([^}]*?)}/g;\n\nconst regexps: Partial<Record<StyleBucketName, RegExp>> = {\n  k: KEYFRAMES_HYDRATOR,\n  t: AT_RULES_HYDRATOR,\n  m: AT_RULES_HYDRATOR,\n};\n\n/**\n * Should be called in a case of Server-Side rendering. Rehydrates cache from for a renderer to avoid double insertion\n * of classes to DOM.\n *\n * @public\n */\nexport function rehydrateRendererCache(\n  renderer: GriffelRenderer,\n  target: Document | undefined = typeof document === 'undefined' ? undefined : document,\n) {\n  if (target) {\n    const styleElements = target.querySelectorAll<HTMLStyleElement>('[data-make-styles-bucket]');\n\n    styleElements.forEach(styleElement => {\n      const bucketName = styleElement.dataset['makeStylesBucket'] as StyleBucketName;\n      const stylesheetKey = getStyleSheetKeyFromElement(styleElement);\n\n      // ðŸ‘‡ If some elements are not created yet, we will register them in renderer\n      if (!renderer.stylesheets[stylesheetKey]) {\n        renderer.stylesheets[stylesheetKey] = createIsomorphicStyleSheetFromElement(styleElement);\n      }\n\n      const regex = regexps[bucketName] || STYLES_HYDRATOR;\n      let match;\n\n      while ((match = regex.exec(styleElement.textContent!))) {\n        // \"cacheKey\" is either a class name or an animation name\n        const [cssRule] = match;\n\n        renderer.insertionCache[cssRule] = bucketName;\n\n        if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n          debugData.addCSSRule(cssRule);\n        }\n      }\n    });\n  }\n}\n"],"names":["KEYFRAMES_HYDRATOR","AT_RULES_HYDRATOR","STYLES_HYDRATOR","regexps","k","t","m","rehydrateRendererCache","renderer","target","document","undefined","styleElements","querySelectorAll","forEach","styleElement","bucketName","dataset","stylesheetKey","getStyleSheetKeyFromElement","stylesheets","createIsomorphicStyleSheetFromElement","regex","match","exec","textContent","cssRule","insertionCache","process","env","NODE_ENV","isDevToolsEnabled","debugData","addCSSRule"],"mappings":";;;;;;AAKA;AACA;AACA,MAAMA,kBAAkB,GAAG,+EAA+E,CAAA;AAC1G,MAAMC,iBAAiB,GAAG,gDAAgD,CAAA;AAC1E,MAAMC,eAAe,GAAG,2CAA2C,CAAA;AAEnE,MAAMC,OAAO,GAA6C;AACxDC,EAAAA,CAAC,EAAEJ,kBAAkB;AACrBK,EAAAA,CAAC,EAAEJ,iBAAiB;AACpBK,EAAAA,CAAC,EAAEL,iBAAAA;CACJ,CAAA;AAED;;;;;AAKG;SACaM,sBAAsBA,CACpCC,QAAyB,EACzBC,SAA+B,OAAOC,QAAQ,KAAK,WAAW,GAAGC,SAAS,GAAGD,QAAQ,EAAA;AAErF,EAAA,IAAID,MAAM,EAAE;AACV,IAAA,MAAMG,aAAa,GAAGH,MAAM,CAACI,gBAAgB,CAAmB,2BAA2B,CAAC,CAAA;AAE5FD,IAAAA,aAAa,CAACE,OAAO,CAACC,YAAY,IAAG;AACnC,MAAA,MAAMC,UAAU,GAAGD,YAAY,CAACE,OAAO,CAAC,kBAAkB,CAAoB,CAAA;AAC9E,MAAA,MAAMC,aAAa,GAAGC,2BAA2B,CAACJ,YAAY,CAAC,CAAA;AAE/D;AACA,MAAA,IAAI,CAACP,QAAQ,CAACY,WAAW,CAACF,aAAa,CAAC,EAAE;QACxCV,QAAQ,CAACY,WAAW,CAACF,aAAa,CAAC,GAAGG,qCAAqC,CAACN,YAAY,CAAC,CAAA;AAC3F,OAAA;AAEA,MAAA,MAAMO,KAAK,GAAGnB,OAAO,CAACa,UAAU,CAAC,IAAId,eAAe,CAAA;AACpD,MAAA,IAAIqB,KAAK,CAAA;MAET,OAAQA,KAAK,GAAGD,KAAK,CAACE,IAAI,CAACT,YAAY,CAACU,WAAY,CAAC,EAAG;AACtD;AACA,QAAA,MAAM,CAACC,OAAO,CAAC,GAAGH,KAAK,CAAA;AAEvBf,QAAAA,QAAQ,CAACmB,cAAc,CAACD,OAAO,CAAC,GAAGV,UAAU,CAAA;QAE7C,IAAIY,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIC,iBAAiB,EAAE;AAC9DC,UAAAA,SAAS,CAACC,UAAU,CAACP,OAAO,CAAC,CAAA;AAC/B,SAAA;AACF,OAAA;AACF,KAAC,CAAC,CAAA;AACJ,GAAA;AACF;;;;"}